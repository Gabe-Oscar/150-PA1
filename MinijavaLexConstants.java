/* Generated By:JavaCC: Do not edit this line. MinijavaLexConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MinijavaLexConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AND = 1;
  /** RegularExpression Id. */
  int LESS_THAN = 2;
  /** RegularExpression Id. */
  int PLUS = 3;
  /** RegularExpression Id. */
  int MULTIPLY = 4;
  /** RegularExpression Id. */
  int IDENTIFIER = 5;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 6;
  /** RegularExpression Id. */
  int TRUE = 7;
  /** RegularExpression Id. */
  int FALSE = 8;
  /** RegularExpression Id. */
  int LPARENS = 9;
  /** RegularExpression Id. */
  int RPARENS = 10;
  /** RegularExpression Id. */
  int LBRACKET = 11;
  /** RegularExpression Id. */
  int RBRACKET = 12;
  /** RegularExpression Id. */
  int ASSIGN = 13;
  /** RegularExpression Id. */
  int DOT = 14;
  /** RegularExpression Id. */
  int LENGTH = 15;
  /** RegularExpression Id. */
  int END_LINE = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int NEW = 18;
  /** RegularExpression Id. */
  int WHILE = 19;
  /** RegularExpression Id. */
  int PRINT = 20;
  /** RegularExpression Id. */
  int COMMA = 21;
  /** RegularExpression Id. */
  int NEGATE = 22;
  /** RegularExpression Id. */
  int L_C_BRACKET = 23;
  /** RegularExpression Id. */
  int R_C_BRACKET = 24;
  /** RegularExpression Id. */
  int EXTENDS = 25;
  /** RegularExpression Id. */
  int THIS = 26;
  /** RegularExpression Id. */
  int INT = 27;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"*\"",
    "\"[a-zA-Z][a-zA-Z0-9_]*\"",
    "\"[0-9]*\"",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"=\"",
    "\".\"",
    "\"length\"",
    "\";\"",
    "\"if\"",
    "\"new\"",
    "\"while\"",
    "\"System.out.println\"",
    "\",\"",
    "\"!\"",
    "\"{\"",
    "\"}\"",
    "\"extends\"",
    "\"this\"",
    "\"int\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
  };

}
